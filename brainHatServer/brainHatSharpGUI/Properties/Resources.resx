<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppName" xml:space="preserve">
    <value>brainHat Server</value>
  </data>
  <data name="BiasDrn" xml:space="preserve">
    <value>Bias Drn.</value>
  </data>
  <data name="BiasDrp" xml:space="preserve">
    <value>Bias Drp.</value>
  </data>
  <data name="BiasMeas" xml:space="preserve">
    <value>Bias.Meas.</value>
  </data>
  <data name="BiasMeasured" xml:space="preserve">
    <value>Bias Measured</value>
  </data>
  <data name="BiasSet" xml:space="preserve">
    <value>Bias Set</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Channel" xml:space="preserve">
    <value>Channel</value>
  </data>
  <data name="ChannelConfig" xml:space="preserve">
    <value>Channel Configuration</value>
  </data>
  <data name="CloseConfigWindowBeforeStoppingServer" xml:space="preserve">
    <value>You must close the configuration window before stopping the server.</value>
  </data>
  <data name="ComPort" xml:space="preserve">
    <value>COM Port</value>
  </data>
  <data name="ConfigureBoard" xml:space="preserve">
    <value>Configure Board</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="Connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="ConnectingToBoard" xml:space="preserve">
    <value>Connecting to board</value>
  </data>
  <data name="ConnectionSettings" xml:space="preserve">
    <value>Connection Settings</value>
  </data>
  <data name="ConnectSRB1" xml:space="preserve">
    <value>connect SRB1</value>
  </data>
  <data name="ConnectSRB1Not" xml:space="preserve">
    <value>do not connect SRB1</value>
  </data>
  <data name="CurrentConfig" xml:space="preserve">
    <value>Current Configuration</value>
  </data>
  <data name="DataStream" xml:space="preserve">
    <value>Data Stream</value>
  </data>
  <data name="DCSignal" xml:space="preserve">
    <value>DC Signal</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>default</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="Disconnected" xml:space="preserve">
    <value>Disconnected</value>
  </data>
  <data name="EnableBrainflowStreaming" xml:space="preserve">
    <value>enable brainflow streaming</value>
  </data>
  <data name="EnableBrainflowStreamingLabel" xml:space="preserve">
    <value>Enable Brainflow Streaming</value>
  </data>
  <data name="EnableBrainflowStreamingNot" xml:space="preserve">
    <value>do not enable brainflow streaming</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="Equipment" xml:space="preserve">
    <value>Board</value>
  </data>
  <data name="EquipmentConfiguration" xml:space="preserve">
    <value>Board Configuration</value>
  </data>
  <data name="FailedGetValidConfig" xml:space="preserve">
    <value>Failed to get valid board configuration.</value>
  </data>
  <data name="False" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="Fast" xml:space="preserve">
    <value>Fast</value>
  </data>
  <data name="Gain" xml:space="preserve">
    <value>Gain</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="greenLight" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\greenLight.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Ground" xml:space="preserve">
    <value>Ground</value>
  </data>
  <data name="ImpedanceConfig" xml:space="preserve">
    <value>Impedance Settings</value>
  </data>
  <data name="IncludeInBias" xml:space="preserve">
    <value>Include in BIAS</value>
  </data>
  <data name="InputType" xml:space="preserve">
    <value>Input Type</value>
  </data>
  <data name="InvalidComPort" xml:space="preserve">
    <value>Invalid COM Port</value>
  </data>
  <data name="IpAddress" xml:space="preserve">
    <value>IP Address</value>
  </data>
  <data name="LogToFile" xml:space="preserve">
    <value>Log to File</value>
  </data>
  <data name="Mode" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="MustStopStreamingBeforeSendingCommand" xml:space="preserve">
    <value>You must stop streaming before sending command.</value>
  </data>
  <data name="Mvdd" xml:space="preserve">
    <value>Mvdd</value>
  </data>
  <data name="Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="QueryBoardParams" xml:space="preserve">
    <value>Querying board parameters ...</value>
  </data>
  <data name="ReadingData" xml:space="preserve">
    <value>Reading data from the board</value>
  </data>
  <data name="ReadingDataNot" xml:space="preserve">
    <value>Not reading data from the board</value>
  </data>
  <data name="redLight" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\redLight.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="RemoveFromBias" xml:space="preserve">
    <value>Remove from BIAS</value>
  </data>
  <data name="Retrying" xml:space="preserve">
    <value>Retrying</value>
  </data>
  <data name="SetChannels" xml:space="preserve">
    <value>Set Channel(s)</value>
  </data>
  <data name="SetDefault" xml:space="preserve">
    <value>Set Defaults</value>
  </data>
  <data name="SetImpedance" xml:space="preserve">
    <value>Set Impedance(s)</value>
  </data>
  <data name="SetTestMode" xml:space="preserve">
    <value>Set Test Mode</value>
  </data>
  <data name="SettingChannels" xml:space="preserve">
    <value>Setting channels</value>
  </data>
  <data name="SettingChannelsDefault" xml:space="preserve">
    <value>Setting channels to default</value>
  </data>
  <data name="SettingSignalTestMode" xml:space="preserve">
    <value>Setting signal test mode</value>
  </data>
  <data name="Shorted" xml:space="preserve">
    <value>Shorted</value>
  </data>
  <data name="Slow" xml:space="preserve">
    <value>Slow</value>
  </data>
  <data name="SRB1" xml:space="preserve">
    <value>SRB1</value>
  </data>
  <data name="SrbIs" xml:space="preserve">
    <value>SRB1 is</value>
  </data>
  <data name="StartServer" xml:space="preserve">
    <value>Start Server</value>
  </data>
  <data name="StartServerBeforeConfigure" xml:space="preserve">
    <value>Please start the server before using Configure Board.</value>
  </data>
  <data name="StartStream" xml:space="preserve">
    <value>Start Stream</value>
  </data>
  <data name="StartWithSrb" xml:space="preserve">
    <value>Start with SRB1 Connected</value>
  </data>
  <data name="StopServer" xml:space="preserve">
    <value>Stop Server</value>
  </data>
  <data name="StopStream" xml:space="preserve">
    <value>Stop Stream</value>
  </data>
  <data name="StreamRunning" xml:space="preserve">
    <value>Data stream running</value>
  </data>
  <data name="StreamStopped" xml:space="preserve">
    <value>Data stream stopped</value>
  </data>
  <data name="Temporary" xml:space="preserve">
    <value>Temp.</value>
  </data>
  <data name="TestSig" xml:space="preserve">
    <value>Test Sig.</value>
  </data>
  <data name="TestSignal" xml:space="preserve">
    <value>Test Signal</value>
  </data>
  <data name="TestSignalApplied" xml:space="preserve">
    <value>Test signal applied</value>
  </data>
  <data name="TestSignalNotApplied" xml:space="preserve">
    <value>Test signal not applied</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="ViewConsole" xml:space="preserve">
    <value>View Console</value>
  </data>
  <data name="yellowLight" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\yellowLight.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>