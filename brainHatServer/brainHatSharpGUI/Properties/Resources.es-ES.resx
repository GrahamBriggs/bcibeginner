<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppName" xml:space="preserve">
    <value>Servidor cerebro</value>
  </data>
  <data name="BiasDrn" xml:space="preserve">
    <value>Drenaje sesgado</value>
  </data>
  <data name="BiasDrp" xml:space="preserve">
    <value>Caída sesgo</value>
  </data>
  <data name="BiasMeas" xml:space="preserve">
    <value>Medida sesgo</value>
  </data>
  <data name="BiasMeasured" xml:space="preserve">
    <value>Sesgo medido</value>
  </data>
  <data name="BiasSet" xml:space="preserve">
    <value>Sesgo</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Channel" xml:space="preserve">
    <value>Canal</value>
  </data>
  <data name="ChannelConfig" xml:space="preserve">
    <value>Configuración de canal</value>
  </data>
  <data name="CloseConfigWindowBeforeStoppingServer" xml:space="preserve">
    <value>Debe cerrar la ventana de configuración antes de detener el servidor.</value>
  </data>
  <data name="ComPort" xml:space="preserve">
    <value>Puerto COM</value>
  </data>
  <data name="ConfigureBoard" xml:space="preserve">
    <value>Configurar equipo</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>Conectar</value>
  </data>
  <data name="Connected" xml:space="preserve">
    <value>Conectado</value>
  </data>
  <data name="ConnectingToBoard" xml:space="preserve">
    <value>Haciendo conexión</value>
  </data>
  <data name="ConnectionSettings" xml:space="preserve">
    <value>Configuración de conexión</value>
  </data>
  <data name="ConnectSRB1" xml:space="preserve">
    <value>conectar SRB1</value>
  </data>
  <data name="ConnectSRB1Not" xml:space="preserve">
    <value>no conecte SRB1</value>
  </data>
  <data name="CurrentConfig" xml:space="preserve">
    <value>Configuración actual</value>
  </data>
  <data name="DataStream" xml:space="preserve">
    <value>Transmisión de datos</value>
  </data>
  <data name="DCSignal" xml:space="preserve">
    <value>Señal CC</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>defecto</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>Desconectar</value>
  </data>
  <data name="Disconnected" xml:space="preserve">
    <value>Desconectado</value>
  </data>
  <data name="EnableBrainflowStreaming" xml:space="preserve">
    <value>habilitar transmisión brainflow</value>
  </data>
  <data name="EnableBrainflowStreamingLabel" xml:space="preserve">
    <value>Habilitar la transmisión brainflow</value>
  </data>
  <data name="EnableBrainflowStreamingNot" xml:space="preserve">
    <value>no habilitar la transmisión brainflow</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Activado</value>
  </data>
  <data name="Equipment" xml:space="preserve">
    <value>Equipos</value>
  </data>
  <data name="EquipmentConfiguration" xml:space="preserve">
    <value>Configuración del equipo</value>
  </data>
  <data name="FailedGetValidConfig" xml:space="preserve">
    <value>No se pudo obtener una configuración válida</value>
  </data>
  <data name="False" xml:space="preserve">
    <value>Falso</value>
  </data>
  <data name="Fast" xml:space="preserve">
    <value>rápida</value>
  </data>
  <data name="Gain" xml:space="preserve">
    <value>Ganancia</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="greenLight" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\greenLight.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Ground" xml:space="preserve">
    <value>Tierra</value>
  </data>
  <data name="ImpedanceConfig" xml:space="preserve">
    <value>Configuración de impedancia</value>
  </data>
  <data name="IncludeInBias" xml:space="preserve">
    <value>Incluir en sesgo</value>
  </data>
  <data name="InputType" xml:space="preserve">
    <value>Aporte</value>
  </data>
  <data name="InvalidComPort" xml:space="preserve">
    <value>Puerto COM no válido</value>
  </data>
  <data name="IpAddress" xml:space="preserve">
    <value>Dirección IP</value>
  </data>
  <data name="LogToFile" xml:space="preserve">
    <value>Guardar consola en archivo</value>
  </data>
  <data name="Mode" xml:space="preserve">
    <value>Modo</value>
  </data>
  <data name="MustStopStreamingBeforeSendingCommand" xml:space="preserve">
    <value>Debe detener la transmisión antes de enviar el comando.</value>
  </data>
  <data name="Mvdd" xml:space="preserve">
    <value>Mvdd</value>
  </data>
  <data name="Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Puerto</value>
  </data>
  <data name="QueryBoardParams" xml:space="preserve">
    <value>Consultar parámetros del equipo</value>
  </data>
  <data name="ReadingData" xml:space="preserve">
    <value>Leer datos del equipo</value>
  </data>
  <data name="ReadingDataNot" xml:space="preserve">
    <value>No leer datos del equipo</value>
  </data>
  <data name="redLight" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\redLight.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Actualizar</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Recargar</value>
  </data>
  <data name="RemoveFromBias" xml:space="preserve">
    <value>Eliminar del sesgo</value>
  </data>
  <data name="Retrying" xml:space="preserve">
    <value>Reintentando</value>
  </data>
  <data name="SetChannels" xml:space="preserve">
    <value>Establecer canal(es)</value>
  </data>
  <data name="SetDefault" xml:space="preserve">
    <value>Establecer defecto</value>
  </data>
  <data name="SetImpedance" xml:space="preserve">
    <value>Establecer impedancia(s)</value>
  </data>
  <data name="SetTestMode" xml:space="preserve">
    <value>Establecer modo de prueba</value>
  </data>
  <data name="SettingChannels" xml:space="preserve">
    <value>Configuración de canales</value>
  </data>
  <data name="SettingChannelsDefault" xml:space="preserve">
    <value>Configuración de canales por defecto</value>
  </data>
  <data name="SettingSignalTestMode" xml:space="preserve">
    <value>Configuración del modo de prueba de señal</value>
  </data>
  <data name="Shorted" xml:space="preserve">
    <value>Corto</value>
  </data>
  <data name="Slow" xml:space="preserve">
    <value>lenta</value>
  </data>
  <data name="SrbIs" xml:space="preserve">
    <value>SRB1 es</value>
  </data>
  <data name="StartServer" xml:space="preserve">
    <value>Iniciar servidor</value>
  </data>
  <data name="StartServerBeforeConfigure" xml:space="preserve">
    <value>Inicie el servidor antes de utilizar Configurar equipo.</value>
  </data>
  <data name="StartStream" xml:space="preserve">
    <value>Iniciar transmisión</value>
  </data>
  <data name="StartWithSrb" xml:space="preserve">
    <value>Comienza con SRB1 conectado</value>
  </data>
  <data name="StopServer" xml:space="preserve">
    <value>Detener servidor</value>
  </data>
  <data name="StopStream" xml:space="preserve">
    <value>Detener transmisión</value>
  </data>
  <data name="StreamRunning" xml:space="preserve">
    <value>Transmisión de datos activa</value>
  </data>
  <data name="StreamStopped" xml:space="preserve">
    <value>La transmisión de datos no está activa</value>
  </data>
  <data name="Temporary" xml:space="preserve">
    <value>Temp.</value>
  </data>
  <data name="TestSig" xml:space="preserve">
    <value>Prueba</value>
  </data>
  <data name="TestSignal" xml:space="preserve">
    <value>Señal de prueba</value>
  </data>
  <data name="TestSignalApplied" xml:space="preserve">
    <value>Señal de prueba aplicada</value>
  </data>
  <data name="TestSignalNotApplied" xml:space="preserve">
    <value>Señal de prueba no aplicada</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>Cierto</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Desconocido</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Versión</value>
  </data>
  <data name="ViewConsole" xml:space="preserve">
    <value>Ver consola</value>
  </data>
  <data name="yellowLight" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\yellowLight.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>